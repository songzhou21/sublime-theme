{
  "name": "rsms bright mono",
  "author": "rsms",
  "variables":
  {
    "black": "black",
    "blue": "hsl(203, 83.5%, 34.3%)",
    "blue2": "hsl(224, 100%, 50%)",
    "blue3": "hsl(240, 100%, 23%)",
    "blue4": "hsl(204, 100%, 83%)",
    "light_blue": "#007aff",
    "teal": "hsla(170, 70%, 45%, 1)",
    "cyan": "hsl(147, 100%, 76%)",
    "cyan2": "hsl(144, 71%, 23%)",
    "cyanDark": "hsl(160, 40%, 4%)",
    "green": "hsl(85, 85%, 79%)",
    "green2": "hsl(120, 14%, 23%)",
    "grey": "hsl(0, 0%, 20%)",
    "grey2": "hsl(0, 0%, 40%)",
    "grey3": "hsl(0, 0%, 60%)",
    "light_gray": "#f6f6f6",
    "orange": "hsl(24, 61%, 74%)",
    "dark_orange": "hsla(10, 90%, 60%, 1)",
    "pink": "hsl(304, 62.6%, 37.5%)",
    "purple": "hsl(255, 29%, 47%)",
    "red": "hsl(0, 100%, 30%)",
    "red2": "hsl(0, 100%, 50%)",
    "red3": "hsl(12, 100%, 50%)",
    "red4": "hsl(345, 100%, 73%)",
    "white": "hsl(0, 0%, 100%)",
    "white2": "hsl(60, 47%, 96%)",
    "yellow": "hsl(60, 100%, 50%)",
    "yellow2": "hsl(53, 89%, 79%)",
    "yellow3": "hsl(52, 100%, 63%)",

    "brown": "hsla(30, 30%, 45%, 1)",
    "dark_brown": "hsla(30, 30%, 30%, 1)",

    "accent": "var(blue2)",
    "attributes": "hsl(44, 96.1%, 26%)",
    "stringColor": "black",
    "keywordColor": "black",
    "current_line": "hsl(214, 100%, 95.5%)",
    "commentColor": "hsl(209, 13%, 42.5%)",
  },
  "globals":
  {
    "foreground": "black",
    "background": "hsl(213, 0%, 100%)",

    "accent": "var(accent)",
    "caret": "var(accent)",

    // selection
    "selection": "color(var(blue4) alpha(0.5))",
    "selection_border": "color(black alpha(0))",
    "inactive_selection": "color(var(blue4) alpha(0.25))",

    // guides
    // alpha part controls color of guides (vertical tab lines)
    "guide": "color(black alpha(0.059))",

    // gutter
    "gutter_foreground": "var(grey3)",
    "line_highlight": "var(current_line)",

    // diff
    "line_diff_width": "3",
    "line_diff_added": "color(var(light_blue))",
    "line_diff_modified": "color(var(light_blue))",
    "line_diff_deleted": "color(red)",

    // brackets
    "brackets_options": "foreground bold",
    "brackets_foreground": "var(accent)",
    "bracket_contents_options": "foreground",
    "bracket_contents_foreground": "var(accent)",

    // canvas shadow (indicates scroll)
    "shadow": "color(var(accent) alpha(0.8))",
    "shadow_width": "5",

    "find_highlight_foreground": "black",
    "find_highlight": "var(yellow3)"
  },
  "rules":
  [
    // =======
    // Comments
    // =======
    {
      "scope": "comment",
      "foreground": "var(commentColor)"
    },
    // e.g. "@param n" of "@param  n the number of elements"
    {
      "scope": "entity.name.tag.documentation  | comment.block.documentation meta.tag.html entity.name.tag.html | comment.block.documentation variable.parameter",
      "foreground": "var(commentColor)",
      "font_style": "bold"
    },

    // =======
    // Strings
    // =======
    {
      "scope": "string | string.unquoted",
      "foreground": "var(stringColor)"
    },
    {
      "scope": "string.regexp",
      "foreground": "var(stringColor)"
    },
    //==========
    // Constant
    //==========
    {
      "scope": "constant",
      "foreground": "var(keywordColor)"
    },
    // e.g., "nil"
    {
      "scope": "constant.language",
      "foreground": "var(keywordColor)"
    },
    // e.g., "1"
    {
      "scope": "constant.numeric",
      "foreground": "var(keywordColor)"
    },
    // e.g. "\n"
    {
      "scope": "constant.character.escape",
      "foreground": "var(keywordColor)"
    },
    //==========
    // Entity
    //==========
    {
      "scope": "entity.name",
      "foreground": "var(keywordColor)"
    },
    // markdown, title" in "# title"
    {
      "scope": "entity.name.section",
      "foreground": "var(keywordColor)",
    },
    {
      "scope": "entity.name.function",
      "font_style": "bold"
    },
    // "html" in "<html>"
    {
      "scope": "entity.name.tag",
      "foreground": "var(keywordColor)"
    },
    {
      "scope": "entity.other.inherited-class",
      "foreground": "var(keywordColor)",
      "font_style": "bold"
    },
    {
      // e.g. "Foo" in `typedef struct x Foo` (C)
      "scope": "entity.name.type",
      "foreground": "var(keywordColor)"
    },
    {
      // e.g. "Config" in `class Config` (TS)
      "scope": "entity.name.class, entity.name.type.class, entity.name.type.interface",
      "font_style": "bold"
    },
    {
      "scope": "entity.other.attribute-name",
      "foreground": "var(grey)"
    },
    //==========
    // Variable
    //==========
    {
      "scope": "variable",
      "foreground": "var(keywordColor)"
    },
    // e.g., "self, super"
    {
      "scope": "variable.language",
      "foreground": "var(keywordColor)"
    },
    // e.g., "other" in "- (BOOL)isEqual:(id)other {}"
    {
      "scope": "variable.parameter",
      "foreground": "var(keywordColor)"
    },
    // invoked methods
    // "NSLog()"
    {
      "scope": "variable.function",
      "foreground": "var(keywordColor)"
    },
    // ========
    // Keyword
    // ========
    {
      "scope": "keyword",
      "foreground": "var(keywordColor)"
    },
    {
      // e.g. "if"
      "scope": "keyword.control",
      "foreground": "var(keywordColor)"
    },
    {
      // e.g. "+, -, ="
      "scope": "keyword.operator",
      "foreground": "var(keywordColor)"
    },
    {
      // e.g. "#define"
      "scope": "meta.preprocessor | meta.preprocessor keyword.control",
      "foreground": "var(keywordColor)"
    },

    // =======
    // Storage
    // =======
    // e.g, int, bool, char
    {
      "scope": "storage.type",
      "foreground": "var(keywordColor)"
    },
    // e.g., static, inline, const, public, private
    {
      "scope": "storage.modifier",
      "foreground": "var(keywordColor)"
    },
    // =======
    // Support
    // =======
    // Other Class
    // e.g., "NSArray"
    {
      "scope": "support.class, support.type",
      "foreground": "var(keywordColor)"
    },
    // Other functions/constant
    // e.g., "isKindOfClass"
    {
      "scope": "support.constant, support.function",
      "foreground": "var(keywordColor)"
    },
    // =======
    // Invalid
    // =======
    {
      "scope": "invalid.deprecated",
      "foreground": "var(red)",
      "font_style": "italic underline"
    },
    {
      "scope": "invalid.illegal",
      "foreground": "var(white)",
      "background": "var(red3)"
    },
    // ========
    // Markdown
    // ========
    {
      "scope": "markup.heading.1 entity.name.section",
      "foreground": "var(blue)",
      "font_style": "bold"
    },
    {
      "scope": "markup.heading.2 entity.name.section",
      "foreground": "var(blue)"
    },
    {
      "scope": "markup.italic",
      "foreground": "var(black)",
      "font_style": "italic"
    },
    {
      "scope": "markup.bold",
      "foreground": "var(black)",
      "font_style": "bold"
    },
    {
      "scope": "markup.underline",
      // "foreground": "hsl(240, 100%, 53%)",
    },
    {
      "scope": "markup.italic markup.bold | markup.bold markup.italic",
      "foreground": "var(black)",
      "font_style": "bold italic"
    },
    {
      "scope": "markup.underline markup.bold | markup.bold markup.underline",
      "foreground": "var(black)",
      "font_style": "bold underline"
    },
    {
      "scope": "markup.underline markup.italic | markup.italic markup.underline",
      "foreground": "var(black)",
      "font_style": "italic underline"
    },
    {
      "scope": "markup.bold markup.italic markup.underline | markup.bold markup.underline markup.italic | markup.italic markup.bold markup.underline | markup.italic markup.underline markup.bold | markup.underline markup.bold markup.italic | markup.underline markup.italic markup.bold",
      "foreground": "var(black)",
      "font_style": "bold italic underline"
    },
    // "-, *, 1" in list
    {
      "scope": "markup.list punctuation.definition.list_item, markup.list.numbered.bullet.markdown",
      "foreground": "var(attributes)"
    },
    // "[X]" in "[X] list-item"
    {
      "scope": "markup.list.unnumbered.markdown constant.language.checkbox.markdown-gfm",
      "foreground": "var(black)"
    },
    {
      "scope": "meta.table.header - punctuation",
      "font_style": "bold"
    },
    {
      "scope": "meta.table.header-separator.markdown-gfm | punctuation.separator.table-cell.markdown",
      "foreground": "var(grey2)"
    },
    // "[]()" in "[Link](www.example.com)"
    {
      "scope": "meta.link.inline.markdown ",
      "foreground": "var(grey2)"
    },
    // `code`
    {
      "scope": "markup.raw.inline.markdown",
      "background": "var(light_gray)"
    },
    // code fence
    {
      "scope": "markup.raw.code-fence",
      "background": "var(light_gray)"
    }
  ]
}
